<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.sonymathew.course.apis</groupId>
	<artifactId>library-apis</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>library-apis</name>
	<description>Library API </description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!--  JPA Data ( We are going to use Repositories, Entities , Hibernate etc. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!--  SQL connector: We are going to use MySQL for DB -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>		
		<!-- Validaton : Use this if you want to validate input -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId> 
		</dependency>		
		<!--Security :  Use this for API security 	-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId> 
		</dependency>	
		<!--JWT :  Handling JWT handling functionality . We have to specify version as thsi is not packaged with Spring Boot -->	
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId> 
			<version>3.8.0</version>  
		</dependency>		

		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

	<!--  Test Related Dependencies -->	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>   
			<version>4.13.1</version>
			<scope>test</scope> 
		</dependency>	
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>   
			<scope>test</scope>   
		</dependency>
        <!-- Used for Integration Tests. Spring's TestRestTemplate throws an error while sending PUT requests with
         authorization error: java.net.HttpRetryException: cannot retry due to server authentication, in streaming mode
         Therefore we need to use Apaches's HTTP client. Please refer:
         https://stackoverflow.com/questions/16748969/java-net-httpretryexception-cannot-retry-due-to-server-authentication-in-stream
            -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>		
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
